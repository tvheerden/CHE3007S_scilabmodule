function cmap=bwrcolormap(varargin)
    // Adapted by Dominic de Oliveira
    //
    // Colormap generated from 

    // Check number of input argument
    if size(varargin)<>1 then
        error(msprintf(gettext("%s: Wrong number of input argument(s): %d expected.\n"), "coolwarmcolormap", 1));
    end
    cmapSize=varargin(1);

    // Check type of input argument
    // Check if input argument is real
    if typeof(cmapSize)<>"constant" | ~isreal(cmapSize) then
        error(msprintf(gettext("%s: Wrong type for input argument #%d: a real scalar expected.\n"), "coolwarmcolormap", 1));
    end
    
    // Check size of input argument
    if size(cmapSize,"*")<>1 then
        error(msprintf(gettext("%s: Wrong size for input argument #%d: a real scalar expected.\n"), "coolwarmcolormap", 1));
    end
    
    cols = [0.0, 0.0, 1.0;
0.0392156862745098, 0.0392156862745098, 1.0;
0.0784313725490196, 0.0784313725490196, 1.0;
0.11764705882352941, 0.11764705882352941, 1.0;
0.1568627450980392, 0.1568627450980392, 1.0;
0.19607843137254902, 0.19607843137254902, 1.0;
0.23529411764705882, 0.23529411764705882, 1.0;
0.27450980392156865, 0.27450980392156865, 1.0;
0.3137254901960784, 0.3137254901960784, 1.0;
0.3529411764705882, 0.3529411764705882, 1.0;
0.39215686274509803, 0.39215686274509803, 1.0;
0.43137254901960786, 0.43137254901960786, 1.0;
0.47058823529411764, 0.47058823529411764, 1.0;
0.5098039215686274, 0.5098039215686274, 1.0;
0.5490196078431373, 0.5490196078431373, 1.0;
0.5882352941176471, 0.5882352941176471, 1.0;
0.6274509803921569, 0.6274509803921569, 1.0;
0.6666666666666666, 0.6666666666666666, 1.0;
0.7058823529411764, 0.7058823529411764, 1.0;
0.7450980392156863, 0.7450980392156863, 1.0;
0.7843137254901961, 0.7843137254901961, 1.0;
0.8235294117647058, 0.8235294117647058, 1.0;
0.8627450980392157, 0.8627450980392157, 1.0;
0.9019607843137255, 0.9019607843137255, 1.0;
0.9411764705882353, 0.9411764705882353, 1.0;
0.9803921568627451, 0.9803921568627451, 1.0;
1.0, 0.9803921568627451, 0.9803921568627451;
1.0, 0.9411764705882353, 0.9411764705882353;
1.0, 0.9019607843137255, 0.9019607843137255;
1.0, 0.8627450980392157, 0.8627450980392157;
1.0, 0.8235294117647058, 0.8235294117647058;
1.0, 0.7843137254901961, 0.7843137254901961;
1.0, 0.7450980392156863, 0.7450980392156863;
1.0, 0.7058823529411764, 0.7058823529411764;
1.0, 0.6666666666666667, 0.6666666666666667;
1.0, 0.6274509803921569, 0.6274509803921569;
1.0, 0.5882352941176473, 0.5882352941176473;
1.0, 0.5490196078431373, 0.5490196078431373;
1.0, 0.5098039215686274, 0.5098039215686274;
1.0, 0.47058823529411764, 0.47058823529411764;
1.0, 0.43137254901960786, 0.43137254901960786;
1.0, 0.3921568627450981, 0.3921568627450981;
1.0, 0.3529411764705882, 0.3529411764705882;
1.0, 0.3137254901960784, 0.3137254901960784;
1.0, 0.27450980392156865, 0.27450980392156865;
1.0, 0.23529411764705888, 0.23529411764705888;
1.0, 0.196078431372549, 0.196078431372549;
1.0, 0.1568627450980392, 0.1568627450980392;
1.0, 0.11764705882352944, 0.11764705882352944;
1.0, 0.07843137254901966, 0.07843137254901966;
1.0, 0.039215686274509776, 0.039215686274509776;
1.0, 0.0, 0.0
1.0 1.0 1.0]
    
    red = cols(:,1);
    green = cols(:,2);
    blue = cols(:,3);
    indexes = [0:5:255 127.5];
    pIndexes = indexes/255 * cmapSize;
    cmap = [interp1(pIndexes, red, 0:(cmapSize - 1), "linear")', ...
            interp1(pIndexes, green, 0:(cmapSize - 1), "linear")', ...
            interp1(pIndexes, blue, 0:(cmapSize - 1), "linear")'];
endfunction
